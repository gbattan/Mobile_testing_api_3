import java.net.HttpURLConnection
import java.net.URL
import com.google.gson.Gson
import com.google.gson.annotations.SerializedName

// Data classes to model the JSON structure
data class ProductResponse(
    @SerializedName("products") val products: List<Product>
)

data class Product(
    @SerializedName("id") val id: Int,
    @SerializedName("name") val name: String,
    @SerializedName("description") val description: String,
    @SerializedName("price") val price: Double,
    @SerializedName("currency") val currency: String
)

fun main() {
    val urlString = "https://jsonkeeper.com/b/MX0A"
    var connection: HttpURLConnection? = null

    try {
        val url = URL(urlString)
        connection = url.openConnection() as HttpURLConnection
        connection.requestMethod = "GET"
        connection.connect()

        val responseCode = connection.responseCode
        if (responseCode == HttpURLConnection.HTTP_OK) {
            val inputStream = connection.inputStream
            val response = inputStream.bufferedReader().use { it.readText() }

            // Use Gson to parse the JSON response
            val gson = Gson()
            val productResponse = gson.fromJson(response, ProductResponse::class.java)

            println("Successfully fetched product data:")
            productResponse.products.forEach { product ->
                println("ID: ${product.id}, Name: ${product.name}, Price: ${product.price} ${product.currency}")
            }

        } else {
            println("Error: HTTP response code $responseCode")
        }

    } catch (e: Exception) {
        println("An error occurred: ${e.message}")
        e.printStackTrace()
    } finally {
        connection?.disconnect()
    }
}
